"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const sql_1 = require("../src/sql");
describe("Test sql lexer", () => {
    it("should tokenize the sql statement", () => {
        let sql = "select * from table where id = 1";
        let tokens = (0, sql_1.tokenize)(sql);
        (0, chai_1.expect)(tokens).to.deep.equal(["select", "*", "from", "table", "where", "id", "=", "1"]);
        sql = "select * from table where id = 1 and name = 'test'";
        tokens = (0, sql_1.tokenize)(sql);
        (0, chai_1.expect)(tokens).to.deep.equal(["select", "*", "from", "table", "where", "id", "=", "1", "and", "name", "=", "'test'"]);
        sql = "select * from table where (id = 1 and name = 'test') or (id = 2 and name = 'test2')";
        tokens = (0, sql_1.tokenize)(sql);
        (0, chai_1.expect)(tokens).to.deep.equal(["select", "*", "from", "table", "where", "(", "id", "=", "1", "and", "name", "=", "'test'", ")", "or", "(", "id", "=", "2", "and", "name", "=", "'test2'", ")"]);
        sql = "select * from table where id = 1 order by id";
        tokens = (0, sql_1.tokenize)(sql);
        (0, chai_1.expect)(tokens).to.deep.equal(["select", "*", "from", "table", "where", "id", "=", "1", "order", "by", "id"]);
        sql = "select * from table where (id = 1 and name = 'test') or (id = 2 and name = 'test2') order by id";
        tokens = (0, sql_1.tokenize)(sql);
        (0, chai_1.expect)(tokens).to.deep.equal(["select", "*", "from", "table", "where", "(", "id", "=", "1", "and", "name", "=", "'test'", ")", "or", "(", "id", "=", "2", "and", "name", "=", "'test2'", ")", "order", "by", "id"]);
        sql = "SELECT 1 + 1";
        tokens = (0, sql_1.tokenize)(sql);
        (0, chai_1.expect)(tokens).to.deep.equal(["SELECT", "1", "+", "1"]);
        sql = "SELECT 'test'";
        tokens = (0, sql_1.tokenize)(sql);
        (0, chai_1.expect)(tokens).to.deep.equal(["SELECT", "'test'"]);
        sql = "SELECT `test`";
        tokens = (0, sql_1.tokenize)(sql);
        (0, chai_1.expect)(tokens).to.deep.equal(["SELECT", "`test`"]);
        sql = "SELECT `test\\`";
        tokens = (0, sql_1.tokenize)(sql);
        (0, chai_1.expect)(tokens).to.deep.equal(["SELECT", "`test\\`"]);
        sql = "SELECT test.query";
        tokens = (0, sql_1.tokenize)(sql);
        (0, chai_1.expect)(tokens).to.deep.equal(["SELECT", "test", ".", "query"]);
        sql = "SELECT db.test.query";
        tokens = (0, sql_1.tokenize)(sql);
        (0, chai_1.expect)(tokens).to.deep.equal(["SELECT", "db", ".", "test", ".", "query"]);
    });
});
